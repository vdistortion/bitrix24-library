import{_ as s,c as a,a0 as l,o as n}from"./chunks/framework.B7JLnubQ.js";const p="/bitrix24-library/assets/bg.WUhe65-D.jpg",c=JSON.parse('{"title":"bitrix24-library","description":"","frontmatter":{},"headers":[],"relativePath":"docs.md","filePath":"docs.md"}'),h={name:"docs.md"};function t(e,i,k,r,d,E){return n(),a("div",null,i[0]||(i[0]=[l('<h1 id="bitrix24-library" tabindex="-1">bitrix24-library <a class="header-anchor" href="#bitrix24-library" aria-label="Permalink to &quot;bitrix24-library&quot;">​</a></h1><p>Promise-обёртка для работы с JavaScript REST API Bitrix24 и набор новых методов</p><p><img src="'+p+`" alt="bitrix24-library"></p><h2 id="установка-и-подключение" tabindex="-1">Установка и подключение <a class="header-anchor" href="#установка-и-подключение" aria-label="Permalink to &quot;Установка и подключение&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bitrix24-library@latest</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bitrix24 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;bitrix24-library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Bitrix24.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">BX24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BX24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAuth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RestCall</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BX24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createBatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  RestCall.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">batch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    info: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;app.info&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    profile: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;profile&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(console.info);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="подключение-и-вызов-методов-на-примере-vue-js" tabindex="-1">Подключение и вызов методов на примере Vue.js <a class="header-anchor" href="#подключение-и-вызов-методов-на-примере-vue-js" aria-label="Permalink to &quot;Подключение и вызов методов на примере Vue.js&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// main.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createApp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bitrix24 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;bitrix24-library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> App </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./App.vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Bitrix24.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">BX24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  createApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(App).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">provide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$BX24&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BX24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#app&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Options API</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    mounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$BX24.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAuth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RestCall</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$BX24.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createBatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      RestCall.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">batch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        info: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;app.info&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        profile: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;profile&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(console.info);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inject: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$BX24&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Composition API</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { inject } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { IBitrix24Library } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;bitrix24-library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $BX24</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IBitrix24Library</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> inject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$BX24&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($BX24.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAuth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RestCall</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $BX24.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createBatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  RestCall.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">batch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    info: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;app.info&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    profile: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;profile&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(console.info);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="битрикс24" tabindex="-1">Битрикс24 <a class="header-anchor" href="#битрикс24" aria-label="Permalink to &quot;Битрикс24&quot;">​</a></h2><ul><li><a href="https://dev.1c-bitrix.ru/rest_help/js_library/" target="_blank" rel="noreferrer">Документация по REST API</a></li></ul><h3 id="системные-функции" tabindex="-1">Системные функции <a class="header-anchor" href="#системные-функции" aria-label="Permalink to &quot;Системные функции&quot;">​</a></h3><ul><li><p><code>.init()</code> — Добавляет в список обработчик события &quot;библиотека готова к работе&quot;</p></li><li><p><code>.install([callback])</code> — Возможность установить обработчик события &quot;приложение запускается первый раз для текущего пользователя&quot;. Если в качестве обработчика передана строка, то она считается ссылкой на js-файл, который нужно загрузить и выполнить при срабатывании события</p></li><li><p><code>.installFinish()</code> — Функция, сигнализирующая об окончании работы инсталлятора или настройщика приложения</p></li><li><p><code>.getAuth()</code> — Получение текущих данных для авторизации через OAuth 2.0</p></li><li><p><code>.refreshAuth()</code> — Принудительное обновление ключа авторизации</p></li></ul><h3 id="вызов-методов-rest" tabindex="-1">Вызов методов REST <a class="header-anchor" href="#вызов-методов-rest" aria-label="Permalink to &quot;Вызов методов REST&quot;">​</a></h3><ul><li><p><code>.callMethod(method[, params])</code> — Метод вызывает указанный метод REST-сервиса с указанными параметрами</p></li><li><p><code>.callBatch(calls[, bHaltOnError])</code> — Пакетное выполнение запросов по несколько элементов (в настоящий момент не более, чем по 50)</p></li><li><p><code>.callBind(event, handler[, authType[, callback]])</code> — Интерфейс, регистрирующий новый обработчик события</p></li><li><p><code>.callUnbind(event, handler[, authType[, callback]])</code> — Интерфейс, удаляющий зарегистрированный обработчик события</p></li></ul><h3 id="настроики-приложения" tabindex="-1">Настройки приложения <a class="header-anchor" href="#настроики-приложения" aria-label="Permalink to &quot;Настройки приложения&quot;">​</a></h3><ul><li><p><code>.userOption</code> — Работа с настройками текущего пользователя</p></li><li><p><code>.appOption</code> — Работа с общими настройками приложения. Установка значений настроек приложения доступа только пользователям с правом управления приложением (<code>.isAdmin()</code>)</p></li></ul><h3 id="показ-системных-диалогов" tabindex="-1">Показ системных диалогов <a class="header-anchor" href="#показ-системных-диалогов" aria-label="Permalink to &quot;Показ системных диалогов&quot;">​</a></h3><ul><li><p><code>.selectUser()</code> — Показать стандартный диалог одиночного выбора пользователя</p></li><li><p><code>.selectUsers()</code> — Показать стандартный диалог множественного выбора пользователей</p></li><li><p><code>.selectAccess([value])</code> — Показать стандартный диалог выбора прав доступа</p></li><li><p><code>.selectCRM([params])</code> — Показать стандартный диалог выбора сущности CRM</p></li></ul><h3 id="встраивание-приложении" tabindex="-1">Встраивание приложений <a class="header-anchor" href="#встраивание-приложении" aria-label="Permalink to &quot;Встраивание приложений&quot;">​</a></h3><ul><li><p><code>.placement.info()</code> — Получение информации о контексте вызова</p></li><li><p><code>.placement.getInterface()</code> — Получение информации о js-интерфейсе текущего места встраивания: списке возможных команд и событий</p></li><li><p><code>.placement.call(command, params)</code> — Вызов зарегистрированной команды интерфейса</p></li><li><p><code>.placement.bindEvent(eventName)</code> — Установка обработчика события интерфейса</p></li></ul><h3 id="дополнительные-методы" tabindex="-1">Дополнительные методы <a class="header-anchor" href="#дополнительные-методы" aria-label="Permalink to &quot;Дополнительные методы&quot;">​</a></h3><ul><li><p><code>.isAdmin()</code> — Определяет, имеет ли текущий пользователь права на управление приложениями</p></li><li><p><code>.getLang()</code> — Возвращает идентификатор языка текущего портала</p></li><li><p><code>.resizeWindow(width, height)</code> — Изменяет размер фрейма с приложением</p></li><li><p><code>.fitWindow()</code> — Устанавливает размер фрейма с приложением в соответствии с размерами содержимого фрейма</p></li><li><p><code>.reloadWindow()</code> — Перезагружает страницу портала с приложением</p></li><li><p><code>.setTitle(title)</code> — Устанавливает заголовок страницы</p></li><li><p><code>.ready()</code> — Устанавливает обработчик события &quot;DOM-структура документа готова к работе&quot;</p></li><li><p><code>.isReady()</code> — Флаг &quot;DOM-структура документа готова к работе&quot;</p></li><li><p><code>.proxy(thisObject)</code> — Аналогична <a href="https://dev.1c-bitrix.ru/api_help/js_lib/kernel/events/bx_proxy.php" target="_blank" rel="noreferrer">BX.proxy</a></p></li><li><p><code>.closeApplication()</code> — Метод закрывает открытое модальное окно с приложением</p></li><li><p><code>.getDomain([isOrigin])</code> — Возвращает адрес портала Битрикс24</p></li><li><p><code>.openApplication(params)</code> — Метод открывает приложение</p></li><li><p><code>.openPath(path[, callback])</code> — Метод открывает указанный путь внутри портала в слайдере</p></li><li><p><code>.proxyContext()</code> — При вызове изнутри прокси-функцию выдаст ссылку на оригинальный контекст выполнения прокси-функции</p></li><li><p><code>.scrollParentWindow(scroll)</code> — Метод прокручивает родительское окно</p></li><li><p><code>.bind(element, eventName, callback)</code> — Устанавливает функцию callback в качестве обработчика события eventName объекта element, возвращает функцию для отписки <code>.unbind()</code> с теми же параметрами</p></li><li><p><code>.unbind(element, eventName, callback)</code> — Убирает функцию callback в качестве обработчика события eventName объекта element</p></li><li><p><code>.getScrollSize()</code> — Функция возвращает внутренние размеры фрейма приложения</p></li><li><p><code>.loadScript(script)</code> — Загружает и выполняет клиентский js-файл</p></li><li><p><code>.im.callTo(userId[, video])</code> — Звонок по внутренней связи</p></li><li><p><code>.im.phoneTo(number)</code> — Звонок на телефонный номер</p></li><li><p><code>.im.openMessenger(dialogId)</code> — Открытие окна мессенджера</p></li><li><p><code>.im.openHistory(dialogId)</code> — Открытие окна истории</p></li></ul><h3 id="новые-методы" tabindex="-1">Новые методы <a class="header-anchor" href="#новые-методы" aria-label="Permalink to &quot;Новые методы&quot;">​</a></h3><ul><li><p><code>.createBatch([handlerList[, BatchClass]])</code> — Создание пакетного выполнения запросов, надстройка над <code>.callBatch()</code> (<a href="./rest-call.html">подробнее</a>)</p></li><li><p><code>.openLink(url[, inNewTab])</code> — Обёртка над методом <code>.openPath()</code>, открывает адрес в новой вкладке, если не можем открыть в том же окне или используем метод на телефоне. Чтобы сразу открыть ссылку в новой вкладке, передайте вторым параметром <code>true</code></p></li><li><p><code>.isMobile()</code> — <a href="https://www.npmjs.com/package/is-mobile" target="_blank" rel="noreferrer">is-mobile</a></p></li></ul>`,25)]))}const g=s(h,[["render",t]]);export{c as __pageData,g as default};
